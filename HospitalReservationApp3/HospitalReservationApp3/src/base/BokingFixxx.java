/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

package base;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author ASUS TUF
 */
public class BokingFixxx extends javax.swing.JFrame {
    private DefaultComboBoxModel<String> comboBoxModel;
    private static Connection conn;

    /** Creates new form BokingFixxx */
    public BokingFixxx() {
        initComponents();
        comboBoxModel = new DefaultComboBoxModel<>();
        session.setModel(comboBoxModel);

        loadDataFromDatabase();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        patient = new javax.swing.JTextField();
        doctor = new javax.swing.JTextField();
        session = new javax.swing.JComboBox<>();
        booking = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        patient.setText("Patient Name");
        patient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patientActionPerformed(evt);
            }
        });
        getContentPane().add(patient, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 270, 470, 50));

        doctor.setText("Doctor Name");
        doctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                doctorActionPerformed(evt);
            }
        });
        getContentPane().add(doctor, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 350, 470, 50));

        session.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sessionActionPerformed(evt);
            }
        });
        getContentPane().add(session, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 430, 470, 40));

        booking.setBackground(new java.awt.Color(0, 0, 0));
        booking.setForeground(new java.awt.Color(255, 255, 255));
        booking.setText("Booking Sekarang");
        booking.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookingActionPerformed(evt);
            }
        });
        getContentPane().add(booking, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 520, 210, 50));

        jLabel1.setBackground(new java.awt.Color(0, 0, 0));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/uiuxfix/booking_pengobatan.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 123, 1347, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadDataFromDatabase() {
        try {
            // Establish a database connection (replace with your database details)
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/hospitalreservationapp", "root", "");

            // Execute a query to retrieve data (replace with your SQL query)
            String sql = "SELECT d.session_start_time FROM doctor_availability d JOIN reservations r ON d.session_start_time = r.session_start_time WHERE d.doctor_username = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            ResultSet resultSet = statement.executeQuery();
            
            comboBoxModel.removeAllElements();
            
            while (resultSet.next()) {
                String data = resultSet.getString("session_start_time");
                comboBoxModel.addElement(data);
            }
            // Close resources
            resultSet.close();
            statement.close();
            conn.close();
        } catch (SQLException ex) {
            // Handle any SQL exceptions
            ex.printStackTrace();
        }
    }

    private void patientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patientActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patientActionPerformed

    private void doctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_doctorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_doctorActionPerformed

    private void bookingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookingActionPerformed
        
        try {
            String sql = "INSERT INTO reservations(patient_username, doctor_username, session_start_time) VALUES (?, ?, ?)";
            PreparedStatement st = conn.prepareStatement(sql);
            String pat = patient.getText();
            String doc = doctor.getText();
            String selectedText = (String) session.getSelectedItem();
            st.setString(1, pat);
            st.setString(2, doc);
            st.setString(3, selectedText);
            st.executeUpdate();
            
            doctorpage Doc = new doctorpage();
            Doc.setVisible(true);
            
        } catch (SQLException ex) {
            Logger.getLogger(HospitalReservationApp.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_bookingActionPerformed
    
    
    private void sessionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sessionActionPerformed
        try {
            // Establish a database connection (replace with your database details)
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost/hospitalreservationapp", "root", "");

            // Execute a query to retrieve data (replace with your SQL query)
            String sql = "SELECT d.session_start_time FROM doctor_availability d JOIN reservations r ON d.session_start_time = r.session_start_time WHERE d.doctor_username = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            ResultSet resultSet = statement.executeQuery();
            
            comboBoxModel.removeAllElements();
            
            while (resultSet.next()) {
                String data = resultSet.getString("session_start_time");
                comboBoxModel.addElement(data);
            }
            // Close resources
            resultSet.close();
            statement.close();
            conn.close();
        } catch (SQLException ex) {
            // Handle any SQL exceptions
            ex.printStackTrace();
        }

    }//GEN-LAST:event_sessionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BokingFixxx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BokingFixxx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BokingFixxx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BokingFixxx.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BokingFixxx().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton booking;
    private javax.swing.JTextField doctor;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField patient;
    private javax.swing.JComboBox<String> session;
    // End of variables declaration//GEN-END:variables

}
